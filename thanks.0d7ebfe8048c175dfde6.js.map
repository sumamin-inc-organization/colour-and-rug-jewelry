{"version":3,"file":"thanks.0d7ebfe8048c175dfde6.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;ACA4B;AACoC;;AAEhE;AACA;AACA;;AAEO;AACP,EAAE,sCAAI,0BAA0B,yBAAyB;;AAEzD,EAAE,6EAAwB;AAC1B;;AAEO;AACP,EAAE,sCAAI,0BAA0B,4BAA4B;AAC5D,EAAE,6EAAwB;AAC1B;;AAEO;AACP,EAAE,sCAAI,0BAA0B,yBAAyB;AACzD;AACA;;AAEO;AACP,EAAE,sCAAI,0BAA0B,4BAA4B;AAC5D;AACA;;;;;;;;;;;;;;;;;;;;;;AC1B4D;AACJ;AACG;AAC3D;AACA;;AAEA;AACA;;AAEO;AACP,mBAAmB,sDAAa;AAChC,EAAE,wEAAmB;AACrB;;AAEO;AACP,mBAAmB,0DAAa;AAChC,EAAE,wEAAmB;AACrB;;AAEA;AACA;;AAEO;AACP,gBAAgB,sDAAa;AAC7B,EAAE,wEAAmB;AACrB;;AAEO;AACP,gBAAgB,0DAAa;AAC7B,EAAE,wEAAmB;AACrB;;AAEA;AACA;AACO;AACP,mBAAmB,sDAAa;AAChC,gBAAgB,sDAAa;AAC7B;;;;;;;;;;;;;;;;;;;AChC2B;;AAE3B;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEO;AACP;AACA,gDAAgD;AAChD,kDAAkD;AAClD,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,MAAM,yEAAuB;AAC7B,MAAM,mEAAiB;AACvB,MAAM;AACN,MAAM,yEAAuB;AAC7B,MAAM,mEAAiB;AACvB;AACA,IAAI;AACJ,8BAA8B;AAC9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACwC;AACD;AACG;AACE;AACX;AACH;AACI;AACD;AACS;;;AAGd;AACuB;AAC6B;AAC0B;AACzC;;AAEjE,uCAAI,gBAAgB,8DAAa;;;AAGjC;AACA,YAAY,uCAAI;AAChB;AACA,aAAa,uCAAI;AACjB;AACA;AACA,oBAAoB,cAAc;AAClC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uCAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uCAAI;AACR;AACA;AACA,wCAAwC,uCAAI;AAC5C;AACA,sBAAsB,uCAAI;AAC1B,YAAY,uCAAI;AAChB;AACA;AACA,OAAO;AACP,KAAK;AACL,IAAI,uCAAI,cAAc,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA,QAAQ,uCAAI;AACZ;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,uCAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,qBAAqB,uCAAI;AACzB;AACA;AACA;AACA,2BAA2B,MAAM,uCAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAI;AACvB;AACA;AACA;AACA;AACA,IAAI,uCAAI;AACR;AACA;AACA;AACA;AACA;AACA,uCAAuC,uCAAI;AAC3C,aAAa;AACb,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gFAAiB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA,yBAAyB,gFAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,4FAA0B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4FAA0B;AAChC;AACA;AACA,MAAM,4FAA0B;AAChC;AACA;AACA;AACA;;;;AAIA;AACA,iBAAiB,uCAAI;AACrB;AACA,eAAe,iBAAiB;AAChC,sBAAsB,iCAAiC;AACvD,2BAA2B,YAAY,IAAI,iCAAiC;AAC5E,4BAA4B,YAAY,IAAI,iCAAiC;AAC7E,+BAA+B,YAAY,IAAI,iCAAiC;AAChF,6BAA6B,YAAY,IAAI,iCAAiC;;AAE9E;AACA;AACA;AACA,sBAAsB,gFAAiB;;AAEvC,EAAE,gFAAkB;;AAEpB;;;AAGA;AACA,iBAAiB,uCAAI;AACrB;AACA,sBAAsB,iCAAiC;AACvD,4BAA4B,YAAY,IAAI,YAAY;AACxD,2BAA2B,iCAAiC,IAAI,iCAAiC;AACjG,+BAA+B,iCAAiC,IAAI,iCAAiC;AACrG,6BAA6B,iCAAiC,IAAI,iCAAiC;;AAEnG,sBAAsB,gFAAiB;AACvC,EAAE,2EAAW;AACb,EAAE,0EAAW;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrQA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://colour-and-rug-jewelry/./src/assets/css/common/btnhover.css?0bba","webpack://colour-and-rug-jewelry/./src/assets/css/common/reset.css?b7fb","webpack://colour-and-rug-jewelry/./src/assets/css/common/thanks.css?dbc6","webpack://colour-and-rug-jewelry/./src/assets/css/common/typography.css?4b7d","webpack://colour-and-rug-jewelry/./src/assets/css/common/utillity.css?bc56","webpack://colour-and-rug-jewelry/./src/assets/css/contact.css?1871","webpack://colour-and-rug-jewelry/./src/assets/css/footer.css?6b6a","webpack://colour-and-rug-jewelry/./src/assets/css/header.css?3bc7","webpack://colour-and-rug-jewelry/./src/assets/css/nav.css?267e","webpack://colour-and-rug-jewelry/./src/assets/js/changeHamburgerColor.js","webpack://colour-and-rug-jewelry/./src/assets/js/changeLogoColor.js","webpack://colour-and-rug-jewelry/./src/assets/js/logoColorAttribute.js","webpack://colour-and-rug-jewelry/./src/thanks.js","webpack://colour-and-rug-jewelry/webpack/bootstrap","webpack://colour-and-rug-jewelry/webpack/runtime/chunk loaded","webpack://colour-and-rug-jewelry/webpack/runtime/define property getters","webpack://colour-and-rug-jewelry/webpack/runtime/global","webpack://colour-and-rug-jewelry/webpack/runtime/hasOwnProperty shorthand","webpack://colour-and-rug-jewelry/webpack/runtime/make namespace object","webpack://colour-and-rug-jewelry/webpack/runtime/publicPath","webpack://colour-and-rug-jewelry/webpack/runtime/jsonp chunk loading","webpack://colour-and-rug-jewelry/webpack/before-startup","webpack://colour-and-rug-jewelry/webpack/startup","webpack://colour-and-rug-jewelry/webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import { gsap } from \"gsap\";\nimport { changeHamburgerAttribute } from \"./logoColorAttribute\";\n\nconst one = document.querySelector(\".one\");\nconst middle = document.querySelector(\".middlw-line\");\nconst three = document.querySelector(\".three\");\n\nexport function changeHamburgerToWhite() {\n  gsap.set(\".hamburger_line\", { backgroundColor: \"#FFF\" });\n\n  changeHamburgerAttribute(\"white\");\n}\n\nexport function changeHamburgerToBlack() {\n  gsap.set(\".hamburger_line\", { backgroundColor: \"#45484B\" });\n  changeHamburgerAttribute(\"black\");\n}\n\nexport function changeOnlyHamburgerToWhite() {\n  gsap.set(\".hamburger_line\", { backgroundColor: \"#FFF\" });\n  // changeHamburgerAttribute(\"white\")\n}\n\nexport function changeOnlyHamburgerToBlack() {\n  gsap.set(\".hamburger_line\", { backgroundColor: \"#45484B\" });\n  // changeHamburgerAttribute(\"black\")\n}\n","import mainLogoBlack from \"../images/nav/logo_main-blk.svg\";\nimport mainLogoWhite from \"../images/nav/logo_main.svg\";\nimport { changeLogoAttribute } from \"./logoColorAttribute\";\nconst logoimg = document.querySelector(\".trigger-logo\");\nconst logoMobile = document.querySelector(\".mobile-logo\");\n\n// Changes the  Logo colors => Mobile\n// ロゴの色を変更します => モバイル\n\nexport function changeMobileLogoToWhite() {\n  logoMobile.src = mainLogoWhite;\n  changeLogoAttribute(\"white\");\n}\n\nexport function changeMobileLogoToBlack() {\n  logoMobile.src = mainLogoBlack;\n  changeLogoAttribute(\"black\");\n}\n\n// Changes the  Logo colors => PC\n// ロゴの色を変更します => PC\n\nexport function changeLogoToWhite() {\n  logoimg.src = mainLogoWhite;\n  changeLogoAttribute(\"white\");\n}\n\nexport function changeLogoToBlack() {\n  logoimg.src = mainLogoBlack;\n  changeLogoAttribute(\"black\");\n}\n\n//changes both mobile and pc logos without updating the attribute\n//属性を更新せずに、モバイルとPCのロゴを両方変更します\nexport function UpdateNavLogoWhite() {\n  logoMobile.src = mainLogoWhite;\n  logoimg.src = mainLogoWhite;\n}\n","import {\n  changeLogoToBlack,\n  changeLogoToWhite,\n  changeMobileLogoToBlack,\n  changeMobileLogoToWhite,\n} from \"./changeLogoColor\";\n\n//checks what the current color of the given element is\n// 指定された要素の現在の色を確認する\nexport function CheckCurrentColor(element) {\n  const logoimg = document.querySelector(\".trigger-logo\");\n  const logoMobile = document.querySelector(\".mobile-logo\");\n  const hamburgerContainer = document.querySelector(\".container\");\n\n  if (element === \"logo\") {\n    if (\n      logoimg.dataset.color === \"white\" ||\n      logoMobile.dataset.color === \"white\"\n    ) {\n      return \"white\";\n    } else if (\n      logoimg.dataset.color === \"black\" ||\n      logoMobile.dataset.color === \"black\"\n    ) {\n      return \"black\";\n    }\n  } else if (element === \"hamburger\") {\n    if (hamburgerContainer.dataset.color === \"white\") {\n      return \"white\";\n    } else if (hamburgerContainer.dataset.color === \"black\") {\n      return \"black\";\n    }\n  }\n}\n\n//changes the data-color of the logos\n// ロゴの data-color を変更する\nexport function changeLogoAttribute(color) {\n  const logoimg = document.querySelector(\".trigger-logo\");\n  const logoMobile = document.querySelector(\".mobile-logo\");\n  if (color === \"white\") {\n    logoimg.dataset.color = \"white\";\n    logoMobile.dataset.color = \"white\";\n  } else if (color === \"black\") {\n    logoimg.dataset.color = \"black\";\n    logoMobile.dataset.color = \"black\";\n  }\n}\n\nexport function changeHamburgerAttribute(color) {\n  const hamburgerContainer = document.querySelector(\".container\");\n  const line1 = document.querySelector(\".one\"); //top line\n  const line2 = document.querySelector(\".three\"); //bottom line\n  const line3 = document.querySelector(\" .two .hamburger_line\"); //middle line\n  const lines = document.querySelectorAll(\".hamburger_line\");\n  if (color === \"white\") {\n    hamburgerContainer.dataset.color = \"white\";\n    lines.forEach((line) => {\n      line.dataset.color = \"white\";\n    });\n  } else if (color === \"black\") {\n    hamburgerContainer.dataset.color = \"black\";\n    lines.forEach((line) => {\n      line.dataset.color = \"black\";\n    });\n  }\n}\n//updates the color depending on what its color was before opeing the nav (white or black)\n// ナビゲーションを開く前の色に基づいて色を更新します（白または黒）\n\nexport function updateColor(color, element) {\n  if (element === \"logo\") {\n    if (color === \"white\") {\n      changeMobileLogoToWhite();\n      changeLogoToWhite();\n    } else if (color === \"black\") {\n      changeMobileLogoToBlack();\n      changeLogoToBlack();\n    }\n  } else if (element === \"hamburger\") {\n    console.log(\"hamburger\"); //temp\n  }\n}\n","// import \"./assets/css/common/reset.css\";\n// import \"./assets/css/common/utillity.css\";\n// import \"./assets/css/common/typography.css\";\nimport \"./assets/css/common/thanks.css\";\nimport \"./assets/css/common/reset.css\";\nimport \"./assets/css/common/utillity.css\";\nimport \"./assets/css/common/typography.css\";\nimport \"./assets/css/header.css\";\nimport \"./assets/css/nav.css\";\nimport \"./assets/css/contact.css\";\nimport \"./assets/css/footer.css\";\nimport \"./assets/css/common/btnhover.css\";\n\n\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { CheckCurrentColor, updateColor } from \"./assets/js/logoColorAttribute\";\nimport { changeOnlyHamburgerToBlack, changeOnlyHamburgerToWhite } from \"./assets/js/changeHamburgerColor\";\nimport { UpdateNavLogoWhite } from \"./assets/js/changeLogoColor\";\n\ngsap.registerPlugin(ScrollTrigger);\n\n\nfunction horizontalLoop(items, config) {\n    items = gsap.utils.toArray(items);\n    config = config || {};\n    let tl = gsap.timeline({\n        repeat: config.repeat,\n        paused: config.paused,\n        defaults: { ease: \"none\" },\n        onReverseComplete: () => tl.totalTime(tl.rawTime() + tl.duration() * 100),\n      }),\n      length = items.length,\n      startX = items[0].offsetLeft,\n      times = [],\n      widths = [],\n      xPercents = [],\n      curIndex = 0,\n      pixelsPerSecond = (config.speed || 1) * 100,\n      snap = config.snap === false ? (v) => v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural\n      totalWidth,\n      curX,\n      distanceToStart,\n      distanceToLoop,\n      item,\n      i;\n    gsap.set(items, {\n      // convert \"x\" to \"xPercent\" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.\n      xPercent: (i, el) => {\n        let w = (widths[i] = parseFloat(gsap.getProperty(el, \"width\", \"px\")));\n        xPercents[i] = snap(\n          (parseFloat(gsap.getProperty(el, \"x\", \"px\")) / w) * 100 +\n            gsap.getProperty(el, \"xPercent\")\n        );\n        return xPercents[i];\n      },\n    });\n    gsap.set(items, { x: 0 });\n    totalWidth =\n      items[length - 1].offsetLeft +\n      (xPercents[length - 1] / 100) * widths[length - 1] -\n      startX +\n      items[length - 1].offsetWidth *\n        gsap.getProperty(items[length - 1], \"scaleX\") +\n      (parseFloat(config.paddingRight) || 0);\n    for (i = 0; i < length; i++) {\n      item = items[i];\n      curX = (xPercents[i] / 100) * widths[i];\n      distanceToStart = item.offsetLeft + curX - startX;\n      distanceToLoop =\n        distanceToStart + widths[i] * gsap.getProperty(item, \"scaleX\");\n      tl.to(\n        item,\n        {\n          xPercent: snap(((curX - distanceToLoop) / widths[i]) * 100),\n          duration: distanceToLoop / pixelsPerSecond,\n        },\n        0\n      )\n        .fromTo(\n          item,\n          {\n            xPercent: snap(\n              ((curX - distanceToLoop + totalWidth) / widths[i]) * 100\n            ),\n          },\n          {\n            xPercent: xPercents[i],\n            duration:\n              (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,\n            immediateRender: false,\n          },\n          distanceToLoop / pixelsPerSecond\n        )\n        .add(\"label\" + i, distanceToStart / pixelsPerSecond);\n      times[i] = distanceToStart / pixelsPerSecond;\n    }\n    function toIndex(index, vars) {\n      vars = vars || {};\n      Math.abs(index - curIndex) > length / 2 &&\n        (index += index > curIndex ? -length : length); // always go in the shortest direction\n      let newIndex = gsap.utils.wrap(0, length, index),\n        time = times[newIndex];\n      if (time > tl.time() !== index > curIndex) {\n        // if we're wrapping the timeline's playhead, make the proper adjustments\n        vars.modifiers = { time: gsap.utils.wrap(0, tl.duration()) };\n        time += tl.duration() * (index > curIndex ? 1 : -1);\n      }\n      curIndex = newIndex;\n      vars.overwrite = true;\n      return tl.tweenTo(time, vars);\n    }\n    tl.next = (vars) => toIndex(curIndex + 1, vars);\n    tl.previous = (vars) => toIndex(curIndex - 1, vars);\n    tl.current = () => curIndex;\n    tl.toIndex = (index, vars) => toIndex(index, vars);\n    tl.times = times;\n    tl.progress(1, true).progress(0, true); // pre-render for performance\n    if (config.reversed) {\n      tl.vars.onReverseComplete();\n      tl.reverse();\n    }\n    return tl;\n  }\n  \n  \n  const listItem = gsap.utils.toArray(\".list__item\");\n  \n  \n  function flowText(scrollerClass,itemClass){\n  \n    gsap.utils.toArray(scrollerClass).forEach((line, i) => {\n      const links = line.querySelectorAll(itemClass),\n            tl = horizontalLoop(links, {\n              repeat: -1, \n              speed: 1 + i * 0.5,\n              reversed: i ? true : false,\n              paddingRight: parseFloat(gsap.getProperty(links[0], \"marginRight\", \"px\")) // otherwise first element would be right up against the last when it loops. In this layout, the spacing is done with marginRight.\n            });\n    });\n  }\n  \n\n  flowText(\".scroller2\",\".list__item\");\n\n  // hamburger\n\nlet icon = document.querySelector(\".menu_icon\");\nlet headerBtn = document.querySelector('.header-btn');\nconst body = document.body;\nconst logoimg = document.querySelector('.trigger-logo');\nconst logomobile = document.querySelector('.mobile-logo');\nconst logoNav = document.querySelector('.nav-logo-img');\nconst isItSp = window.matchMedia(\"(max-width: 768px)\");\nconst isItPc = window.matchMedia(\"(min-width: 769px)\");\nlet currentLogoColor =  CheckCurrentColor(\"logo\")\n\nicon.addEventListener(\"click\", () => {\n  // let currentIconColor = CheckCurrentColor(\"hamburger\");\n  // if(currentIconColor === \"white\"){\n  //   changeHamburgerToWhite();\n  // }\n  // else if(currentIconColor === \"black\"){\n  //   changeHamburgerToBlack();\n  // }\n  animateHamburger()\n});\n\n\nfunction animateHamburger(){\n  let currentIconColor = CheckCurrentColor(\"hamburger\");\n  console.log(currentIconColor)\n  icon.classList.toggle(\"clicked\");\n  if( icon.classList.contains(\"clicked\")){\n    icon.setAttribute('aria-expanded', 'true');\n   if(currentIconColor === \"black\"){\n    changeOnlyHamburgerToWhite();\n    }\n    openNav();\n  }\n  else{\n    icon.setAttribute('aria-expanded', 'false'); \n    if(currentIconColor === \"white\"){\n      changeOnlyHamburgerToWhite();\n    }\n    else if(currentIconColor === \"black\"){\n      changeOnlyHamburgerToBlack();\n    }\n    closeNav()\n  }\n}\n\n\n\nfunction openNav(){\n  let openAnim = gsap.timeline()\n  openAnim\n  // .to(body,{position:\"fixed\"})\n  .to('.primary-nav',{opacity:1,duration:1,zIndex:7999})\n  .fromTo(\".header-btn\", { opacity: 1 }, { opacity: 0 ,pointerEvents:\"none\"},\"<\")\n  .fromTo(\".header-info\", { opacity: 1 }, { opacity: 0 ,pointerEvents:\"none\"},\"<\")\n  .fromTo(\".header-tel_img\", { opacity: 1 }, { opacity: 0 ,pointerEvents:\"none\"},\"<\")\n  .fromTo(\".header-decor\", { opacity: 1 }, { opacity: 0,pointerEvents:\"none\" },\"<\");\n\n  //deals with scroll being shown in the nav\n  document.documentElement.style.overflow = 'hidden';\n  document.body.style.overflow = 'hidden';\n  currentLogoColor =  CheckCurrentColor(\"logo\")\n\n  UpdateNavLogoWhite();\n\n}\n\n\nfunction closeNav(){\n  let openAnim = gsap.timeline()\n  openAnim\n  .to('.primary-nav',{opacity:0,duration:1,zIndex:\"-1\"})\n  .fromTo(\".header-info\", { opacity: 0 }, { opacity: 1 },\"<\")\n  .fromTo(\".header-btn\", { opacity: 0,pointerEvents:\"none\" }, { opacity: 1 ,pointerEvents:\"auto\"},\"<\")\n  .fromTo(\".header-tel_img\", { opacity: 0 ,pointerEvents:\"none\"}, { opacity: 1 ,pointerEvents:\"auto\"},\"<\")\n  .fromTo(\".header-decor\", { opacity: 0 ,pointerEvents:\"none\"}, { opacity: 1 ,pointerEvents:\"auto\"},\"<\")\n\n  currentLogoColor =  CheckCurrentColor(\"logo\")\n  updateColor(currentLogoColor,\"logo\");\n  updateColor(currentLogoColor,\"logo\");\n\n  //deals with position sticky not working after closing nav\n  document.body.style['overflow-y'] = 'visible';\n  document.documentElement.style.overflow = 'auto';\n  document.body.style['overflow-x'] = 'clip';\n\n    //changes logo form the main page logo to nav logo depening on device vw\n}\n\n\nconst navLinks = document.querySelectorAll('.nav-link');\nconst salon = document.querySelector('.location');\n\nnavLinks.forEach(link => {\n  link.addEventListener('click', (e) => {\n    // e.preventDefault(); \n\n    const targetSectionId = link.getAttribute('data-prime-link');\n    console.log(targetSectionId);\n    scrollToSection(targetSectionId);\n    animateHamburger();\n    closeNav();\n  });\n});\n\nsalon.addEventListener('click', (e) => {\n  animateHamburger();\n  closeNav();\n});\n\nfunction scrollToSection(sectionId) {\n  const targetSection = document.querySelector(sectionId);\n  if (targetSection) {\n    targetSection.scrollIntoView({ behavior: 'smooth' });\n  }\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"thanks\": 0,\n\t\"src_assets_css_common_btnhover_css-src_assets_css_common_reset_css-src_assets_css_common_typo-77cd40\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcolour_and_rug_jewelry\"] = self[\"webpackChunkcolour_and_rug_jewelry\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_gsap_ScrollTrigger_js-node_modules_gsap_index_js\",\"src_assets_css_common_btnhover_css-src_assets_css_common_reset_css-src_assets_css_common_typo-77cd40\"], () => (__webpack_require__(\"./src/thanks.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}